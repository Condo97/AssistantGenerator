/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.assistantgenerator.Main'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    destinationDirectory = file("out")
    archiveBaseName = "AirtableAssistantGenerator"

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    // OIAGPTConnector for OpenAI GPT handling
    implementation 'com.github.condo97:OAIGPTConnector:1.0.0'

    // Httpson for handling HTTPS requests with JsonNode and Jackson
    implementation 'com.github.condo97:Httpson:1.0.0'

    // Jackson for JSONs
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.0.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.assistantgenerator.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
